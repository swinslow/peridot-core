// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/controller/controller.proto

package controller

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	agent "github.com/swinslow/peridot-core/pkg/agent"
	status "github.com/swinslow/peridot-core/pkg/status"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// StartReq requests that the Controller start running.
type StartReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartReq) Reset()         { *m = StartReq{} }
func (m *StartReq) String() string { return proto.CompactTextString(m) }
func (*StartReq) ProtoMessage()    {}
func (*StartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{0}
}

func (m *StartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReq.Unmarshal(m, b)
}
func (m *StartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReq.Marshal(b, m, deterministic)
}
func (m *StartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReq.Merge(m, src)
}
func (m *StartReq) XXX_Size() int {
	return xxx_messageInfo_StartReq.Size(m)
}
func (m *StartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartReq proto.InternalMessageInfo

// StartResp tells whether the Controller could try to start.
type StartResp struct {
	Starting             bool     `protobuf:"varint,1,opt,name=starting,proto3" json:"starting,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartResp) Reset()         { *m = StartResp{} }
func (m *StartResp) String() string { return proto.CompactTextString(m) }
func (*StartResp) ProtoMessage()    {}
func (*StartResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{1}
}

func (m *StartResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartResp.Unmarshal(m, b)
}
func (m *StartResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartResp.Marshal(b, m, deterministic)
}
func (m *StartResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartResp.Merge(m, src)
}
func (m *StartResp) XXX_Size() int {
	return xxx_messageInfo_StartResp.Size(m)
}
func (m *StartResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StartResp.DiscardUnknown(m)
}

var xxx_messageInfo_StartResp proto.InternalMessageInfo

func (m *StartResp) GetStarting() bool {
	if m != nil {
		return m.Starting
	}
	return false
}

// GetStatusReq requests the current status of the Controller.
type GetStatusReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusReq) Reset()         { *m = GetStatusReq{} }
func (m *GetStatusReq) String() string { return proto.CompactTextString(m) }
func (*GetStatusReq) ProtoMessage()    {}
func (*GetStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{2}
}

func (m *GetStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusReq.Unmarshal(m, b)
}
func (m *GetStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusReq.Marshal(b, m, deterministic)
}
func (m *GetStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusReq.Merge(m, src)
}
func (m *GetStatusReq) XXX_Size() int {
	return xxx_messageInfo_GetStatusReq.Size(m)
}
func (m *GetStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusReq proto.InternalMessageInfo

// GetStatusResp tells the Controller's overall current status.
type GetStatusResp struct {
	// controller overall run status
	RunStatus status.Status `protobuf:"varint,1,opt,name=runStatus,proto3,enum=status.Status" json:"runStatus,omitempty"`
	// controller overall health status
	HealthStatus status.Health `protobuf:"varint,2,opt,name=healthStatus,proto3,enum=status.Health" json:"healthStatus,omitempty"`
	// any output messages
	OutputMsg string `protobuf:"bytes,3,opt,name=outputMsg,proto3" json:"outputMsg,omitempty"`
	// any error messages; should only be set if isError == true
	ErrorMsg             string   `protobuf:"bytes,4,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusResp) Reset()         { *m = GetStatusResp{} }
func (m *GetStatusResp) String() string { return proto.CompactTextString(m) }
func (*GetStatusResp) ProtoMessage()    {}
func (*GetStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{3}
}

func (m *GetStatusResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusResp.Unmarshal(m, b)
}
func (m *GetStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusResp.Marshal(b, m, deterministic)
}
func (m *GetStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusResp.Merge(m, src)
}
func (m *GetStatusResp) XXX_Size() int {
	return xxx_messageInfo_GetStatusResp.Size(m)
}
func (m *GetStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusResp proto.InternalMessageInfo

func (m *GetStatusResp) GetRunStatus() status.Status {
	if m != nil {
		return m.RunStatus
	}
	return status.Status_STATUS_SAME
}

func (m *GetStatusResp) GetHealthStatus() status.Health {
	if m != nil {
		return m.HealthStatus
	}
	return status.Health_HEALTH_SAME
}

func (m *GetStatusResp) GetOutputMsg() string {
	if m != nil {
		return m.OutputMsg
	}
	return ""
}

func (m *GetStatusResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// StopReq requests that the Controller stop running.
type StopReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopReq) Reset()         { *m = StopReq{} }
func (m *StopReq) String() string { return proto.CompactTextString(m) }
func (*StopReq) ProtoMessage()    {}
func (*StopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{4}
}

func (m *StopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReq.Unmarshal(m, b)
}
func (m *StopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReq.Marshal(b, m, deterministic)
}
func (m *StopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReq.Merge(m, src)
}
func (m *StopReq) XXX_Size() int {
	return xxx_messageInfo_StopReq.Size(m)
}
func (m *StopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopReq proto.InternalMessageInfo

// StopResp tells whether the Controller could try to stop.
type StopResp struct {
	Stopping             bool     `protobuf:"varint,1,opt,name=stopping,proto3" json:"stopping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopResp) Reset()         { *m = StopResp{} }
func (m *StopResp) String() string { return proto.CompactTextString(m) }
func (*StopResp) ProtoMessage()    {}
func (*StopResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{5}
}

func (m *StopResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopResp.Unmarshal(m, b)
}
func (m *StopResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopResp.Marshal(b, m, deterministic)
}
func (m *StopResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopResp.Merge(m, src)
}
func (m *StopResp) XXX_Size() int {
	return xxx_messageInfo_StopResp.Size(m)
}
func (m *StopResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StopResp.DiscardUnknown(m)
}

var xxx_messageInfo_StopResp proto.InternalMessageInfo

func (m *StopResp) GetStopping() bool {
	if m != nil {
		return m.Stopping
	}
	return false
}

// AgentConfig defines an Agent instance's configuration.
type AgentConfig struct {
	// name for this agent instance. must be unique across the controller.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// url where this agent can be found
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	// port on the url where this agent can be found
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// agent type; need not be unique across instances (e.g., can have multiple
	// idsearcher instances with 'idsearcher' type and different configs, as
	// long as they have different names).
	Type                 string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Kvs                  []*AgentConfig_AgentKV `protobuf:"bytes,5,rep,name=kvs,proto3" json:"kvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *AgentConfig) Reset()         { *m = AgentConfig{} }
func (m *AgentConfig) String() string { return proto.CompactTextString(m) }
func (*AgentConfig) ProtoMessage()    {}
func (*AgentConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{6}
}

func (m *AgentConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentConfig.Unmarshal(m, b)
}
func (m *AgentConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentConfig.Marshal(b, m, deterministic)
}
func (m *AgentConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentConfig.Merge(m, src)
}
func (m *AgentConfig) XXX_Size() int {
	return xxx_messageInfo_AgentConfig.Size(m)
}
func (m *AgentConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentConfig.DiscardUnknown(m)
}

var xxx_messageInfo_AgentConfig proto.InternalMessageInfo

func (m *AgentConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AgentConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AgentConfig) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AgentConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AgentConfig) GetKvs() []*AgentConfig_AgentKV {
	if m != nil {
		return m.Kvs
	}
	return nil
}

// agent-specific key-value pairs
type AgentConfig_AgentKV struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentConfig_AgentKV) Reset()         { *m = AgentConfig_AgentKV{} }
func (m *AgentConfig_AgentKV) String() string { return proto.CompactTextString(m) }
func (*AgentConfig_AgentKV) ProtoMessage()    {}
func (*AgentConfig_AgentKV) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{6, 0}
}

func (m *AgentConfig_AgentKV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentConfig_AgentKV.Unmarshal(m, b)
}
func (m *AgentConfig_AgentKV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentConfig_AgentKV.Marshal(b, m, deterministic)
}
func (m *AgentConfig_AgentKV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentConfig_AgentKV.Merge(m, src)
}
func (m *AgentConfig_AgentKV) XXX_Size() int {
	return xxx_messageInfo_AgentConfig_AgentKV.Size(m)
}
func (m *AgentConfig_AgentKV) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentConfig_AgentKV.DiscardUnknown(m)
}

var xxx_messageInfo_AgentConfig_AgentKV proto.InternalMessageInfo

func (m *AgentConfig_AgentKV) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *AgentConfig_AgentKV) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// AddAgentReq requests that a new Agent be registered with the controller.
type AddAgentReq struct {
	Cfg                  *AgentConfig `protobuf:"bytes,1,opt,name=cfg,proto3" json:"cfg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AddAgentReq) Reset()         { *m = AddAgentReq{} }
func (m *AddAgentReq) String() string { return proto.CompactTextString(m) }
func (*AddAgentReq) ProtoMessage()    {}
func (*AddAgentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{7}
}

func (m *AddAgentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAgentReq.Unmarshal(m, b)
}
func (m *AddAgentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAgentReq.Marshal(b, m, deterministic)
}
func (m *AddAgentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAgentReq.Merge(m, src)
}
func (m *AddAgentReq) XXX_Size() int {
	return xxx_messageInfo_AddAgentReq.Size(m)
}
func (m *AddAgentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAgentReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddAgentReq proto.InternalMessageInfo

func (m *AddAgentReq) GetCfg() *AgentConfig {
	if m != nil {
		return m.Cfg
	}
	return nil
}

// AddAgentResp tells whether the agent could be configured.
type AddAgentResp struct {
	// was the agent successfully configured?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// any error messages; should only be set if success == false
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAgentResp) Reset()         { *m = AddAgentResp{} }
func (m *AddAgentResp) String() string { return proto.CompactTextString(m) }
func (*AddAgentResp) ProtoMessage()    {}
func (*AddAgentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{8}
}

func (m *AddAgentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAgentResp.Unmarshal(m, b)
}
func (m *AddAgentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAgentResp.Marshal(b, m, deterministic)
}
func (m *AddAgentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAgentResp.Merge(m, src)
}
func (m *AddAgentResp) XXX_Size() int {
	return xxx_messageInfo_AddAgentResp.Size(m)
}
func (m *AddAgentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAgentResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddAgentResp proto.InternalMessageInfo

func (m *AddAgentResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddAgentResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// GetAgentReq requests info on the Agent with the given name.
type GetAgentReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentReq) Reset()         { *m = GetAgentReq{} }
func (m *GetAgentReq) String() string { return proto.CompactTextString(m) }
func (*GetAgentReq) ProtoMessage()    {}
func (*GetAgentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{9}
}

func (m *GetAgentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentReq.Unmarshal(m, b)
}
func (m *GetAgentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentReq.Marshal(b, m, deterministic)
}
func (m *GetAgentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentReq.Merge(m, src)
}
func (m *GetAgentReq) XXX_Size() int {
	return xxx_messageInfo_GetAgentReq.Size(m)
}
func (m *GetAgentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentReq proto.InternalMessageInfo

func (m *GetAgentReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// GetAgentResp returns info on the requested agent.
// If name was not found, success will be set to false and error message returned.
type GetAgentResp struct {
	// was an agent found with the given name?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// if success, agent configuration is returned
	Cfg *AgentConfig `protobuf:"bytes,2,opt,name=cfg,proto3" json:"cfg,omitempty"`
	// if not success, error is returned
	ErrorMsg             string   `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAgentResp) Reset()         { *m = GetAgentResp{} }
func (m *GetAgentResp) String() string { return proto.CompactTextString(m) }
func (*GetAgentResp) ProtoMessage()    {}
func (*GetAgentResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{10}
}

func (m *GetAgentResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAgentResp.Unmarshal(m, b)
}
func (m *GetAgentResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAgentResp.Marshal(b, m, deterministic)
}
func (m *GetAgentResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAgentResp.Merge(m, src)
}
func (m *GetAgentResp) XXX_Size() int {
	return xxx_messageInfo_GetAgentResp.Size(m)
}
func (m *GetAgentResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAgentResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAgentResp proto.InternalMessageInfo

func (m *GetAgentResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetAgentResp) GetCfg() *AgentConfig {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *GetAgentResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// GetAllAgentsReq requests info on all registered Agents.
type GetAllAgentsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllAgentsReq) Reset()         { *m = GetAllAgentsReq{} }
func (m *GetAllAgentsReq) String() string { return proto.CompactTextString(m) }
func (*GetAllAgentsReq) ProtoMessage()    {}
func (*GetAllAgentsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{11}
}

func (m *GetAllAgentsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllAgentsReq.Unmarshal(m, b)
}
func (m *GetAllAgentsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllAgentsReq.Marshal(b, m, deterministic)
}
func (m *GetAllAgentsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllAgentsReq.Merge(m, src)
}
func (m *GetAllAgentsReq) XXX_Size() int {
	return xxx_messageInfo_GetAllAgentsReq.Size(m)
}
func (m *GetAllAgentsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllAgentsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllAgentsReq proto.InternalMessageInfo

// GetAllAgentsResp returns info on all registered Agents.
type GetAllAgentsResp struct {
	Cfgs                 []*AgentConfig `protobuf:"bytes,1,rep,name=cfgs,proto3" json:"cfgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetAllAgentsResp) Reset()         { *m = GetAllAgentsResp{} }
func (m *GetAllAgentsResp) String() string { return proto.CompactTextString(m) }
func (*GetAllAgentsResp) ProtoMessage()    {}
func (*GetAllAgentsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{12}
}

func (m *GetAllAgentsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllAgentsResp.Unmarshal(m, b)
}
func (m *GetAllAgentsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllAgentsResp.Marshal(b, m, deterministic)
}
func (m *GetAllAgentsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllAgentsResp.Merge(m, src)
}
func (m *GetAllAgentsResp) XXX_Size() int {
	return xxx_messageInfo_GetAllAgentsResp.Size(m)
}
func (m *GetAllAgentsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllAgentsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllAgentsResp proto.InternalMessageInfo

func (m *GetAllAgentsResp) GetCfgs() []*AgentConfig {
	if m != nil {
		return m.Cfgs
	}
	return nil
}

// StepAgent is a JobSetTemplate step for a single Agent.
type StepAgent struct {
	// the agent's name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepAgent) Reset()         { *m = StepAgent{} }
func (m *StepAgent) String() string { return proto.CompactTextString(m) }
func (*StepAgent) ProtoMessage()    {}
func (*StepAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{13}
}

func (m *StepAgent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepAgent.Unmarshal(m, b)
}
func (m *StepAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepAgent.Marshal(b, m, deterministic)
}
func (m *StepAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepAgent.Merge(m, src)
}
func (m *StepAgent) XXX_Size() int {
	return xxx_messageInfo_StepAgent.Size(m)
}
func (m *StepAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_StepAgent.DiscardUnknown(m)
}

var xxx_messageInfo_StepAgent proto.InternalMessageInfo

func (m *StepAgent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// StepJobSet is a JobSetTemplate step for a separate JobSet.
type StepJobSet struct {
	// the JobSetTemplate's name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepJobSet) Reset()         { *m = StepJobSet{} }
func (m *StepJobSet) String() string { return proto.CompactTextString(m) }
func (*StepJobSet) ProtoMessage()    {}
func (*StepJobSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{14}
}

func (m *StepJobSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepJobSet.Unmarshal(m, b)
}
func (m *StepJobSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepJobSet.Marshal(b, m, deterministic)
}
func (m *StepJobSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepJobSet.Merge(m, src)
}
func (m *StepJobSet) XXX_Size() int {
	return xxx_messageInfo_StepJobSet.Size(m)
}
func (m *StepJobSet) XXX_DiscardUnknown() {
	xxx_messageInfo_StepJobSet.DiscardUnknown(m)
}

var xxx_messageInfo_StepJobSet proto.InternalMessageInfo

func (m *StepJobSet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// StepConcurrent represents a collection of steps that can run concurrently.
type StepConcurrent struct {
	// the set of concurrent steps
	Steps                []*Step  `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepConcurrent) Reset()         { *m = StepConcurrent{} }
func (m *StepConcurrent) String() string { return proto.CompactTextString(m) }
func (*StepConcurrent) ProtoMessage()    {}
func (*StepConcurrent) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{15}
}

func (m *StepConcurrent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepConcurrent.Unmarshal(m, b)
}
func (m *StepConcurrent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepConcurrent.Marshal(b, m, deterministic)
}
func (m *StepConcurrent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepConcurrent.Merge(m, src)
}
func (m *StepConcurrent) XXX_Size() int {
	return xxx_messageInfo_StepConcurrent.Size(m)
}
func (m *StepConcurrent) XXX_DiscardUnknown() {
	xxx_messageInfo_StepConcurrent.DiscardUnknown(m)
}

var xxx_messageInfo_StepConcurrent proto.InternalMessageInfo

func (m *StepConcurrent) GetSteps() []*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

// Step represents the union of step types.
type Step struct {
	// Types that are valid to be assigned to S:
	//	*Step_Agent
	//	*Step_Jobset
	//	*Step_Concurrent
	S                    isStep_S `protobuf_oneof:"s"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()    {}
func (*Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{16}
}

func (m *Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Step.Unmarshal(m, b)
}
func (m *Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Step.Marshal(b, m, deterministic)
}
func (m *Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Step.Merge(m, src)
}
func (m *Step) XXX_Size() int {
	return xxx_messageInfo_Step.Size(m)
}
func (m *Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Step proto.InternalMessageInfo

type isStep_S interface {
	isStep_S()
}

type Step_Agent struct {
	Agent *StepAgent `protobuf:"bytes,1,opt,name=agent,proto3,oneof"`
}

type Step_Jobset struct {
	Jobset *StepJobSet `protobuf:"bytes,2,opt,name=jobset,proto3,oneof"`
}

type Step_Concurrent struct {
	Concurrent *StepConcurrent `protobuf:"bytes,3,opt,name=concurrent,proto3,oneof"`
}

func (*Step_Agent) isStep_S() {}

func (*Step_Jobset) isStep_S() {}

func (*Step_Concurrent) isStep_S() {}

func (m *Step) GetS() isStep_S {
	if m != nil {
		return m.S
	}
	return nil
}

func (m *Step) GetAgent() *StepAgent {
	if x, ok := m.GetS().(*Step_Agent); ok {
		return x.Agent
	}
	return nil
}

func (m *Step) GetJobset() *StepJobSet {
	if x, ok := m.GetS().(*Step_Jobset); ok {
		return x.Jobset
	}
	return nil
}

func (m *Step) GetConcurrent() *StepConcurrent {
	if x, ok := m.GetS().(*Step_Concurrent); ok {
		return x.Concurrent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Step) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Step_Agent)(nil),
		(*Step_Jobset)(nil),
		(*Step_Concurrent)(nil),
	}
}

// JobSetTemplate defines a template for new JobSets.
type JobSetTemplate struct {
	// unique name for the template
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// this JobSet's steps
	Steps                []*Step  `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobSetTemplate) Reset()         { *m = JobSetTemplate{} }
func (m *JobSetTemplate) String() string { return proto.CompactTextString(m) }
func (*JobSetTemplate) ProtoMessage()    {}
func (*JobSetTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{17}
}

func (m *JobSetTemplate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSetTemplate.Unmarshal(m, b)
}
func (m *JobSetTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSetTemplate.Marshal(b, m, deterministic)
}
func (m *JobSetTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSetTemplate.Merge(m, src)
}
func (m *JobSetTemplate) XXX_Size() int {
	return xxx_messageInfo_JobSetTemplate.Size(m)
}
func (m *JobSetTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSetTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_JobSetTemplate proto.InternalMessageInfo

func (m *JobSetTemplate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobSetTemplate) GetSteps() []*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

// AddJobSetTemplateReq requests that a new JobSetTemplate be registered with
// the controller.
type AddJobSetTemplateReq struct {
	Jst                  *JobSetTemplate `protobuf:"bytes,1,opt,name=jst,proto3" json:"jst,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddJobSetTemplateReq) Reset()         { *m = AddJobSetTemplateReq{} }
func (m *AddJobSetTemplateReq) String() string { return proto.CompactTextString(m) }
func (*AddJobSetTemplateReq) ProtoMessage()    {}
func (*AddJobSetTemplateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{18}
}

func (m *AddJobSetTemplateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddJobSetTemplateReq.Unmarshal(m, b)
}
func (m *AddJobSetTemplateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddJobSetTemplateReq.Marshal(b, m, deterministic)
}
func (m *AddJobSetTemplateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddJobSetTemplateReq.Merge(m, src)
}
func (m *AddJobSetTemplateReq) XXX_Size() int {
	return xxx_messageInfo_AddJobSetTemplateReq.Size(m)
}
func (m *AddJobSetTemplateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddJobSetTemplateReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddJobSetTemplateReq proto.InternalMessageInfo

func (m *AddJobSetTemplateReq) GetJst() *JobSetTemplate {
	if m != nil {
		return m.Jst
	}
	return nil
}

// AddJobSetTemplateResp tells whether the template was successfully
// registered.
type AddJobSetTemplateResp struct {
	// was the template successfully configured?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// any output messages
	OutputMsg string `protobuf:"bytes,2,opt,name=outputMsg,proto3" json:"outputMsg,omitempty"`
	// any error messages; should only be set if success == false
	ErrorMsg             string   `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddJobSetTemplateResp) Reset()         { *m = AddJobSetTemplateResp{} }
func (m *AddJobSetTemplateResp) String() string { return proto.CompactTextString(m) }
func (*AddJobSetTemplateResp) ProtoMessage()    {}
func (*AddJobSetTemplateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{19}
}

func (m *AddJobSetTemplateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddJobSetTemplateResp.Unmarshal(m, b)
}
func (m *AddJobSetTemplateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddJobSetTemplateResp.Marshal(b, m, deterministic)
}
func (m *AddJobSetTemplateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddJobSetTemplateResp.Merge(m, src)
}
func (m *AddJobSetTemplateResp) XXX_Size() int {
	return xxx_messageInfo_AddJobSetTemplateResp.Size(m)
}
func (m *AddJobSetTemplateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddJobSetTemplateResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddJobSetTemplateResp proto.InternalMessageInfo

func (m *AddJobSetTemplateResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AddJobSetTemplateResp) GetOutputMsg() string {
	if m != nil {
		return m.OutputMsg
	}
	return ""
}

func (m *AddJobSetTemplateResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// GetJobSetTemplateReq requests info on the JobSetTemplate with the given name.
type GetJobSetTemplateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobSetTemplateReq) Reset()         { *m = GetJobSetTemplateReq{} }
func (m *GetJobSetTemplateReq) String() string { return proto.CompactTextString(m) }
func (*GetJobSetTemplateReq) ProtoMessage()    {}
func (*GetJobSetTemplateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{20}
}

func (m *GetJobSetTemplateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobSetTemplateReq.Unmarshal(m, b)
}
func (m *GetJobSetTemplateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobSetTemplateReq.Marshal(b, m, deterministic)
}
func (m *GetJobSetTemplateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobSetTemplateReq.Merge(m, src)
}
func (m *GetJobSetTemplateReq) XXX_Size() int {
	return xxx_messageInfo_GetJobSetTemplateReq.Size(m)
}
func (m *GetJobSetTemplateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobSetTemplateReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobSetTemplateReq proto.InternalMessageInfo

func (m *GetJobSetTemplateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// GetJobSetTemplateResp returns info on the requested JobSetTemplate.
// If name was not found, success will be set to false and error message returned.
type GetJobSetTemplateResp struct {
	// was a JobSetTemplate found with the given name?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// if success, JobSetTemplate is returned
	Jst *JobSetTemplate `protobuf:"bytes,2,opt,name=jst,proto3" json:"jst,omitempty"`
	// if not success, error is returned
	ErrorMsg             string   `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobSetTemplateResp) Reset()         { *m = GetJobSetTemplateResp{} }
func (m *GetJobSetTemplateResp) String() string { return proto.CompactTextString(m) }
func (*GetJobSetTemplateResp) ProtoMessage()    {}
func (*GetJobSetTemplateResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{21}
}

func (m *GetJobSetTemplateResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobSetTemplateResp.Unmarshal(m, b)
}
func (m *GetJobSetTemplateResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobSetTemplateResp.Marshal(b, m, deterministic)
}
func (m *GetJobSetTemplateResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobSetTemplateResp.Merge(m, src)
}
func (m *GetJobSetTemplateResp) XXX_Size() int {
	return xxx_messageInfo_GetJobSetTemplateResp.Size(m)
}
func (m *GetJobSetTemplateResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobSetTemplateResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobSetTemplateResp proto.InternalMessageInfo

func (m *GetJobSetTemplateResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *GetJobSetTemplateResp) GetJst() *JobSetTemplate {
	if m != nil {
		return m.Jst
	}
	return nil
}

func (m *GetJobSetTemplateResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// GetAllJobSetTemplatesReq requests info on all registered JobSetTemplates.
type GetAllJobSetTemplatesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllJobSetTemplatesReq) Reset()         { *m = GetAllJobSetTemplatesReq{} }
func (m *GetAllJobSetTemplatesReq) String() string { return proto.CompactTextString(m) }
func (*GetAllJobSetTemplatesReq) ProtoMessage()    {}
func (*GetAllJobSetTemplatesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{22}
}

func (m *GetAllJobSetTemplatesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobSetTemplatesReq.Unmarshal(m, b)
}
func (m *GetAllJobSetTemplatesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobSetTemplatesReq.Marshal(b, m, deterministic)
}
func (m *GetAllJobSetTemplatesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobSetTemplatesReq.Merge(m, src)
}
func (m *GetAllJobSetTemplatesReq) XXX_Size() int {
	return xxx_messageInfo_GetAllJobSetTemplatesReq.Size(m)
}
func (m *GetAllJobSetTemplatesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobSetTemplatesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobSetTemplatesReq proto.InternalMessageInfo

// GetAllJobSetTemplatesResp returns info on all registered JobSetTemplates.
type GetAllJobSetTemplatesResp struct {
	Jsts                 []*JobSetTemplate `protobuf:"bytes,1,rep,name=jsts,proto3" json:"jsts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllJobSetTemplatesResp) Reset()         { *m = GetAllJobSetTemplatesResp{} }
func (m *GetAllJobSetTemplatesResp) String() string { return proto.CompactTextString(m) }
func (*GetAllJobSetTemplatesResp) ProtoMessage()    {}
func (*GetAllJobSetTemplatesResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{23}
}

func (m *GetAllJobSetTemplatesResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobSetTemplatesResp.Unmarshal(m, b)
}
func (m *GetAllJobSetTemplatesResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobSetTemplatesResp.Marshal(b, m, deterministic)
}
func (m *GetAllJobSetTemplatesResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobSetTemplatesResp.Merge(m, src)
}
func (m *GetAllJobSetTemplatesResp) XXX_Size() int {
	return xxx_messageInfo_GetAllJobSetTemplatesResp.Size(m)
}
func (m *GetAllJobSetTemplatesResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobSetTemplatesResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobSetTemplatesResp proto.InternalMessageInfo

func (m *GetAllJobSetTemplatesResp) GetJsts() []*JobSetTemplate {
	if m != nil {
		return m.Jsts
	}
	return nil
}

// GetJobReq requests information on the specified Job's status.
type GetJobReq struct {
	JobID                uint64   `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobReq) Reset()         { *m = GetJobReq{} }
func (m *GetJobReq) String() string { return proto.CompactTextString(m) }
func (*GetJobReq) ProtoMessage()    {}
func (*GetJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{24}
}

func (m *GetJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobReq.Unmarshal(m, b)
}
func (m *GetJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobReq.Marshal(b, m, deterministic)
}
func (m *GetJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobReq.Merge(m, src)
}
func (m *GetJobReq) XXX_Size() int {
	return xxx_messageInfo_GetJobReq.Size(m)
}
func (m *GetJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobReq proto.InternalMessageInfo

func (m *GetJobReq) GetJobID() uint64 {
	if m != nil {
		return m.JobID
	}
	return 0
}

// GetJobResp returns information on the specified Job's status.
type GetJobResp struct {
	// Job ID
	JobID uint64 `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	// ID of JobSet that this job is part of, if any
	JobSetID uint64 `protobuf:"varint,2,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	// Step # within JobSet that this job is part of, if any
	JobSetStepID uint64 `protobuf:"varint,3,opt,name=jobSetStepID,proto3" json:"jobSetStepID,omitempty"`
	// configuration for this job
	Cfg *agent.JobConfig `protobuf:"bytes,4,opt,name=cfg,proto3" json:"cfg,omitempty"`
	// status of this job
	St                   *agent.StatusReport `protobuf:"bytes,5,opt,name=st,proto3" json:"st,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetJobResp) Reset()         { *m = GetJobResp{} }
func (m *GetJobResp) String() string { return proto.CompactTextString(m) }
func (*GetJobResp) ProtoMessage()    {}
func (*GetJobResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{25}
}

func (m *GetJobResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResp.Unmarshal(m, b)
}
func (m *GetJobResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResp.Marshal(b, m, deterministic)
}
func (m *GetJobResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResp.Merge(m, src)
}
func (m *GetJobResp) XXX_Size() int {
	return xxx_messageInfo_GetJobResp.Size(m)
}
func (m *GetJobResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResp proto.InternalMessageInfo

func (m *GetJobResp) GetJobID() uint64 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *GetJobResp) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

func (m *GetJobResp) GetJobSetStepID() uint64 {
	if m != nil {
		return m.JobSetStepID
	}
	return 0
}

func (m *GetJobResp) GetCfg() *agent.JobConfig {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *GetJobResp) GetSt() *agent.StatusReport {
	if m != nil {
		return m.St
	}
	return nil
}

// GetAllJobsForJobSetReq requests information on all known Jobs in the
// JobSet with the given ID.
type GetAllJobsForJobSetReq struct {
	JobSetID             uint64   `protobuf:"varint,1,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllJobsForJobSetReq) Reset()         { *m = GetAllJobsForJobSetReq{} }
func (m *GetAllJobsForJobSetReq) String() string { return proto.CompactTextString(m) }
func (*GetAllJobsForJobSetReq) ProtoMessage()    {}
func (*GetAllJobsForJobSetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{26}
}

func (m *GetAllJobsForJobSetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobsForJobSetReq.Unmarshal(m, b)
}
func (m *GetAllJobsForJobSetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobsForJobSetReq.Marshal(b, m, deterministic)
}
func (m *GetAllJobsForJobSetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobsForJobSetReq.Merge(m, src)
}
func (m *GetAllJobsForJobSetReq) XXX_Size() int {
	return xxx_messageInfo_GetAllJobsForJobSetReq.Size(m)
}
func (m *GetAllJobsForJobSetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobsForJobSetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobsForJobSetReq proto.InternalMessageInfo

func (m *GetAllJobsForJobSetReq) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

// GetAllJobsForJobSetResp returns information on all known Jobs in the
// JobSet with the given ID.
type GetAllJobsForJobSetResp struct {
	Jobs                 []*GetJobResp `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetAllJobsForJobSetResp) Reset()         { *m = GetAllJobsForJobSetResp{} }
func (m *GetAllJobsForJobSetResp) String() string { return proto.CompactTextString(m) }
func (*GetAllJobsForJobSetResp) ProtoMessage()    {}
func (*GetAllJobsForJobSetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{27}
}

func (m *GetAllJobsForJobSetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobsForJobSetResp.Unmarshal(m, b)
}
func (m *GetAllJobsForJobSetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobsForJobSetResp.Marshal(b, m, deterministic)
}
func (m *GetAllJobsForJobSetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobsForJobSetResp.Merge(m, src)
}
func (m *GetAllJobsForJobSetResp) XXX_Size() int {
	return xxx_messageInfo_GetAllJobsForJobSetResp.Size(m)
}
func (m *GetAllJobsForJobSetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobsForJobSetResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobsForJobSetResp proto.InternalMessageInfo

func (m *GetAllJobsForJobSetResp) GetJobs() []*GetJobResp {
	if m != nil {
		return m.Jobs
	}
	return nil
}

// GetAllJobsReq requests information on all known Jobs.
type GetAllJobsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllJobsReq) Reset()         { *m = GetAllJobsReq{} }
func (m *GetAllJobsReq) String() string { return proto.CompactTextString(m) }
func (*GetAllJobsReq) ProtoMessage()    {}
func (*GetAllJobsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{28}
}

func (m *GetAllJobsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobsReq.Unmarshal(m, b)
}
func (m *GetAllJobsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobsReq.Marshal(b, m, deterministic)
}
func (m *GetAllJobsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobsReq.Merge(m, src)
}
func (m *GetAllJobsReq) XXX_Size() int {
	return xxx_messageInfo_GetAllJobsReq.Size(m)
}
func (m *GetAllJobsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobsReq proto.InternalMessageInfo

// GetAllJobsResp returns information on all known Jobs.
type GetAllJobsResp struct {
	Jobs                 []*GetJobResp `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetAllJobsResp) Reset()         { *m = GetAllJobsResp{} }
func (m *GetAllJobsResp) String() string { return proto.CompactTextString(m) }
func (*GetAllJobsResp) ProtoMessage()    {}
func (*GetAllJobsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{29}
}

func (m *GetAllJobsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobsResp.Unmarshal(m, b)
}
func (m *GetAllJobsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobsResp.Marshal(b, m, deterministic)
}
func (m *GetAllJobsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobsResp.Merge(m, src)
}
func (m *GetAllJobsResp) XXX_Size() int {
	return xxx_messageInfo_GetAllJobsResp.Size(m)
}
func (m *GetAllJobsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobsResp proto.InternalMessageInfo

func (m *GetAllJobsResp) GetJobs() []*GetJobResp {
	if m != nil {
		return m.Jobs
	}
	return nil
}

// CancelJobReq requests that the specified Job be cancelled.
type CancelJobReq struct {
	JobID                uint64   `protobuf:"varint,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelJobReq) Reset()         { *m = CancelJobReq{} }
func (m *CancelJobReq) String() string { return proto.CompactTextString(m) }
func (*CancelJobReq) ProtoMessage()    {}
func (*CancelJobReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{30}
}

func (m *CancelJobReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelJobReq.Unmarshal(m, b)
}
func (m *CancelJobReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelJobReq.Marshal(b, m, deterministic)
}
func (m *CancelJobReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelJobReq.Merge(m, src)
}
func (m *CancelJobReq) XXX_Size() int {
	return xxx_messageInfo_CancelJobReq.Size(m)
}
func (m *CancelJobReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelJobReq.DiscardUnknown(m)
}

var xxx_messageInfo_CancelJobReq proto.InternalMessageInfo

func (m *CancelJobReq) GetJobID() uint64 {
	if m != nil {
		return m.JobID
	}
	return 0
}

// CancelJobResp tells whether the Job was cancelled successfully.
type CancelJobResp struct {
	// was the job successfully cancelled?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// any output messages
	OutputMsg string `protobuf:"bytes,2,opt,name=outputMsg,proto3" json:"outputMsg,omitempty"`
	// any error messages; should only be set if success == false
	ErrorMsg             string   `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelJobResp) Reset()         { *m = CancelJobResp{} }
func (m *CancelJobResp) String() string { return proto.CompactTextString(m) }
func (*CancelJobResp) ProtoMessage()    {}
func (*CancelJobResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{31}
}

func (m *CancelJobResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelJobResp.Unmarshal(m, b)
}
func (m *CancelJobResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelJobResp.Marshal(b, m, deterministic)
}
func (m *CancelJobResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelJobResp.Merge(m, src)
}
func (m *CancelJobResp) XXX_Size() int {
	return xxx_messageInfo_CancelJobResp.Size(m)
}
func (m *CancelJobResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelJobResp.DiscardUnknown(m)
}

var xxx_messageInfo_CancelJobResp proto.InternalMessageInfo

func (m *CancelJobResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CancelJobResp) GetOutputMsg() string {
	if m != nil {
		return m.OutputMsg
	}
	return ""
}

func (m *CancelJobResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// JobSet-specific key-value pairs; will be passed along to all Agents
type JobSetConfig struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobSetConfig) Reset()         { *m = JobSetConfig{} }
func (m *JobSetConfig) String() string { return proto.CompactTextString(m) }
func (*JobSetConfig) ProtoMessage()    {}
func (*JobSetConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{32}
}

func (m *JobSetConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSetConfig.Unmarshal(m, b)
}
func (m *JobSetConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSetConfig.Marshal(b, m, deterministic)
}
func (m *JobSetConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSetConfig.Merge(m, src)
}
func (m *JobSetConfig) XXX_Size() int {
	return xxx_messageInfo_JobSetConfig.Size(m)
}
func (m *JobSetConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSetConfig.DiscardUnknown(m)
}

var xxx_messageInfo_JobSetConfig proto.InternalMessageInfo

func (m *JobSetConfig) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *JobSetConfig) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// StartJobSetReq requests that a single new JobSet be started.
type StartJobSetReq struct {
	// name of the JobSetTemplate to run as a new JobSet
	JstName string `protobuf:"bytes,1,opt,name=jstName,proto3" json:"jstName,omitempty"`
	// configuration for this JobSet
	Cfgs                 []*JobSetConfig `protobuf:"bytes,2,rep,name=cfgs,proto3" json:"cfgs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StartJobSetReq) Reset()         { *m = StartJobSetReq{} }
func (m *StartJobSetReq) String() string { return proto.CompactTextString(m) }
func (*StartJobSetReq) ProtoMessage()    {}
func (*StartJobSetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{33}
}

func (m *StartJobSetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobSetReq.Unmarshal(m, b)
}
func (m *StartJobSetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobSetReq.Marshal(b, m, deterministic)
}
func (m *StartJobSetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobSetReq.Merge(m, src)
}
func (m *StartJobSetReq) XXX_Size() int {
	return xxx_messageInfo_StartJobSetReq.Size(m)
}
func (m *StartJobSetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobSetReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobSetReq proto.InternalMessageInfo

func (m *StartJobSetReq) GetJstName() string {
	if m != nil {
		return m.JstName
	}
	return ""
}

func (m *StartJobSetReq) GetCfgs() []*JobSetConfig {
	if m != nil {
		return m.Cfgs
	}
	return nil
}

// StartJobSetResp tells whether the JobSet was started successfully.
type StartJobSetResp struct {
	// was the JobSet successfully started?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// new JobSet ID
	JobSetID uint64 `protobuf:"varint,2,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	// all the jobs (with their IDs and step IDs) in this JobSet
	Jobs []*GetJobResp `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// any output messages
	OutputMsg string `protobuf:"bytes,4,opt,name=outputMsg,proto3" json:"outputMsg,omitempty"`
	// any error messages; should only be set if success == false
	ErrorMsg             string   `protobuf:"bytes,5,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartJobSetResp) Reset()         { *m = StartJobSetResp{} }
func (m *StartJobSetResp) String() string { return proto.CompactTextString(m) }
func (*StartJobSetResp) ProtoMessage()    {}
func (*StartJobSetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{34}
}

func (m *StartJobSetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartJobSetResp.Unmarshal(m, b)
}
func (m *StartJobSetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartJobSetResp.Marshal(b, m, deterministic)
}
func (m *StartJobSetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartJobSetResp.Merge(m, src)
}
func (m *StartJobSetResp) XXX_Size() int {
	return xxx_messageInfo_StartJobSetResp.Size(m)
}
func (m *StartJobSetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_StartJobSetResp.DiscardUnknown(m)
}

var xxx_messageInfo_StartJobSetResp proto.InternalMessageInfo

func (m *StartJobSetResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *StartJobSetResp) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

func (m *StartJobSetResp) GetJobs() []*GetJobResp {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *StartJobSetResp) GetOutputMsg() string {
	if m != nil {
		return m.OutputMsg
	}
	return ""
}

func (m *StartJobSetResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

// GetJobSetReq requests information on the specified JobSet's status.
type GetJobSetReq struct {
	JobSetID             uint64   `protobuf:"varint,1,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobSetReq) Reset()         { *m = GetJobSetReq{} }
func (m *GetJobSetReq) String() string { return proto.CompactTextString(m) }
func (*GetJobSetReq) ProtoMessage()    {}
func (*GetJobSetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{35}
}

func (m *GetJobSetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobSetReq.Unmarshal(m, b)
}
func (m *GetJobSetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobSetReq.Marshal(b, m, deterministic)
}
func (m *GetJobSetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobSetReq.Merge(m, src)
}
func (m *GetJobSetReq) XXX_Size() int {
	return xxx_messageInfo_GetJobSetReq.Size(m)
}
func (m *GetJobSetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobSetReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobSetReq proto.InternalMessageInfo

func (m *GetJobSetReq) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

type JobSetStatusReport struct {
	// is the JobSet running?
	RunStatus status.Status `protobuf:"varint,1,opt,name=runStatus,proto3,enum=status.Status" json:"runStatus,omitempty"`
	// what is the JobSet's health?
	HealthStatus status.Health `protobuf:"varint,2,opt,name=healthStatus,proto3,enum=status.Health" json:"healthStatus,omitempty"`
	// time when the JobSet was started, as Unix time
	TimeStarted int64 `protobuf:"varint,3,opt,name=timeStarted,proto3" json:"timeStarted,omitempty"`
	// time when the JobSet stopped running, as Unix time
	TimeFinished int64 `protobuf:"varint,4,opt,name=timeFinished,proto3" json:"timeFinished,omitempty"`
	// logged output, if any. should be short messages; anything
	// lengthy should be separately logged or reported elsewhere
	OutputMessages string `protobuf:"bytes,5,opt,name=outputMessages,proto3" json:"outputMessages,omitempty"`
	// logged errors, if any
	ErrorMessages        string   `protobuf:"bytes,6,opt,name=errorMessages,proto3" json:"errorMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobSetStatusReport) Reset()         { *m = JobSetStatusReport{} }
func (m *JobSetStatusReport) String() string { return proto.CompactTextString(m) }
func (*JobSetStatusReport) ProtoMessage()    {}
func (*JobSetStatusReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{36}
}

func (m *JobSetStatusReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSetStatusReport.Unmarshal(m, b)
}
func (m *JobSetStatusReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSetStatusReport.Marshal(b, m, deterministic)
}
func (m *JobSetStatusReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSetStatusReport.Merge(m, src)
}
func (m *JobSetStatusReport) XXX_Size() int {
	return xxx_messageInfo_JobSetStatusReport.Size(m)
}
func (m *JobSetStatusReport) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSetStatusReport.DiscardUnknown(m)
}

var xxx_messageInfo_JobSetStatusReport proto.InternalMessageInfo

func (m *JobSetStatusReport) GetRunStatus() status.Status {
	if m != nil {
		return m.RunStatus
	}
	return status.Status_STATUS_SAME
}

func (m *JobSetStatusReport) GetHealthStatus() status.Health {
	if m != nil {
		return m.HealthStatus
	}
	return status.Health_HEALTH_SAME
}

func (m *JobSetStatusReport) GetTimeStarted() int64 {
	if m != nil {
		return m.TimeStarted
	}
	return 0
}

func (m *JobSetStatusReport) GetTimeFinished() int64 {
	if m != nil {
		return m.TimeFinished
	}
	return 0
}

func (m *JobSetStatusReport) GetOutputMessages() string {
	if m != nil {
		return m.OutputMessages
	}
	return ""
}

func (m *JobSetStatusReport) GetErrorMessages() string {
	if m != nil {
		return m.ErrorMessages
	}
	return ""
}

// GetJobSetResp returns information on the specified JobSet's status.
type GetJobSetResp struct {
	// JobSet ID
	JobSetID uint64 `protobuf:"varint,1,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	// status of this JobSet
	St                   *JobSetStatusReport `protobuf:"bytes,2,opt,name=st,proto3" json:"st,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetJobSetResp) Reset()         { *m = GetJobSetResp{} }
func (m *GetJobSetResp) String() string { return proto.CompactTextString(m) }
func (*GetJobSetResp) ProtoMessage()    {}
func (*GetJobSetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{37}
}

func (m *GetJobSetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobSetResp.Unmarshal(m, b)
}
func (m *GetJobSetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobSetResp.Marshal(b, m, deterministic)
}
func (m *GetJobSetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobSetResp.Merge(m, src)
}
func (m *GetJobSetResp) XXX_Size() int {
	return xxx_messageInfo_GetJobSetResp.Size(m)
}
func (m *GetJobSetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobSetResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobSetResp proto.InternalMessageInfo

func (m *GetJobSetResp) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

func (m *GetJobSetResp) GetSt() *JobSetStatusReport {
	if m != nil {
		return m.St
	}
	return nil
}

// GetAllJobSetsReq requests information on all known JobSets.
type GetAllJobSetsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllJobSetsReq) Reset()         { *m = GetAllJobSetsReq{} }
func (m *GetAllJobSetsReq) String() string { return proto.CompactTextString(m) }
func (*GetAllJobSetsReq) ProtoMessage()    {}
func (*GetAllJobSetsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{38}
}

func (m *GetAllJobSetsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobSetsReq.Unmarshal(m, b)
}
func (m *GetAllJobSetsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobSetsReq.Marshal(b, m, deterministic)
}
func (m *GetAllJobSetsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobSetsReq.Merge(m, src)
}
func (m *GetAllJobSetsReq) XXX_Size() int {
	return xxx_messageInfo_GetAllJobSetsReq.Size(m)
}
func (m *GetAllJobSetsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobSetsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobSetsReq proto.InternalMessageInfo

// GetAllJobSetsResp returns information on all known JobSets.
type GetAllJobSetsResp struct {
	Sts                  []*GetJobSetResp `protobuf:"bytes,1,rep,name=sts,proto3" json:"sts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetAllJobSetsResp) Reset()         { *m = GetAllJobSetsResp{} }
func (m *GetAllJobSetsResp) String() string { return proto.CompactTextString(m) }
func (*GetAllJobSetsResp) ProtoMessage()    {}
func (*GetAllJobSetsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{39}
}

func (m *GetAllJobSetsResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllJobSetsResp.Unmarshal(m, b)
}
func (m *GetAllJobSetsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllJobSetsResp.Marshal(b, m, deterministic)
}
func (m *GetAllJobSetsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllJobSetsResp.Merge(m, src)
}
func (m *GetAllJobSetsResp) XXX_Size() int {
	return xxx_messageInfo_GetAllJobSetsResp.Size(m)
}
func (m *GetAllJobSetsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllJobSetsResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllJobSetsResp proto.InternalMessageInfo

func (m *GetAllJobSetsResp) GetSts() []*GetJobSetResp {
	if m != nil {
		return m.Sts
	}
	return nil
}

// CancelJobSetReq requests that the specified JobSet be cancelled.
type CancelJobSetReq struct {
	JobSetID             uint64   `protobuf:"varint,1,opt,name=jobSetID,proto3" json:"jobSetID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelJobSetReq) Reset()         { *m = CancelJobSetReq{} }
func (m *CancelJobSetReq) String() string { return proto.CompactTextString(m) }
func (*CancelJobSetReq) ProtoMessage()    {}
func (*CancelJobSetReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{40}
}

func (m *CancelJobSetReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelJobSetReq.Unmarshal(m, b)
}
func (m *CancelJobSetReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelJobSetReq.Marshal(b, m, deterministic)
}
func (m *CancelJobSetReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelJobSetReq.Merge(m, src)
}
func (m *CancelJobSetReq) XXX_Size() int {
	return xxx_messageInfo_CancelJobSetReq.Size(m)
}
func (m *CancelJobSetReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelJobSetReq.DiscardUnknown(m)
}

var xxx_messageInfo_CancelJobSetReq proto.InternalMessageInfo

func (m *CancelJobSetReq) GetJobSetID() uint64 {
	if m != nil {
		return m.JobSetID
	}
	return 0
}

// CancelJobSetResp tells whether the JobSet was cancelled successfully.
type CancelJobSetResp struct {
	// was the JobSet successfully cancelled?
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// any output messages
	OutputMsg string `protobuf:"bytes,2,opt,name=outputMsg,proto3" json:"outputMsg,omitempty"`
	// any error messages; should only be set if success == false
	ErrorMsg             string   `protobuf:"bytes,3,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelJobSetResp) Reset()         { *m = CancelJobSetResp{} }
func (m *CancelJobSetResp) String() string { return proto.CompactTextString(m) }
func (*CancelJobSetResp) ProtoMessage()    {}
func (*CancelJobSetResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_d329ddaa36318286, []int{41}
}

func (m *CancelJobSetResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelJobSetResp.Unmarshal(m, b)
}
func (m *CancelJobSetResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelJobSetResp.Marshal(b, m, deterministic)
}
func (m *CancelJobSetResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelJobSetResp.Merge(m, src)
}
func (m *CancelJobSetResp) XXX_Size() int {
	return xxx_messageInfo_CancelJobSetResp.Size(m)
}
func (m *CancelJobSetResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelJobSetResp.DiscardUnknown(m)
}

var xxx_messageInfo_CancelJobSetResp proto.InternalMessageInfo

func (m *CancelJobSetResp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CancelJobSetResp) GetOutputMsg() string {
	if m != nil {
		return m.OutputMsg
	}
	return ""
}

func (m *CancelJobSetResp) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*StartReq)(nil), "controller.StartReq")
	proto.RegisterType((*StartResp)(nil), "controller.StartResp")
	proto.RegisterType((*GetStatusReq)(nil), "controller.GetStatusReq")
	proto.RegisterType((*GetStatusResp)(nil), "controller.GetStatusResp")
	proto.RegisterType((*StopReq)(nil), "controller.StopReq")
	proto.RegisterType((*StopResp)(nil), "controller.StopResp")
	proto.RegisterType((*AgentConfig)(nil), "controller.AgentConfig")
	proto.RegisterType((*AgentConfig_AgentKV)(nil), "controller.AgentConfig.AgentKV")
	proto.RegisterType((*AddAgentReq)(nil), "controller.AddAgentReq")
	proto.RegisterType((*AddAgentResp)(nil), "controller.AddAgentResp")
	proto.RegisterType((*GetAgentReq)(nil), "controller.GetAgentReq")
	proto.RegisterType((*GetAgentResp)(nil), "controller.GetAgentResp")
	proto.RegisterType((*GetAllAgentsReq)(nil), "controller.GetAllAgentsReq")
	proto.RegisterType((*GetAllAgentsResp)(nil), "controller.GetAllAgentsResp")
	proto.RegisterType((*StepAgent)(nil), "controller.StepAgent")
	proto.RegisterType((*StepJobSet)(nil), "controller.StepJobSet")
	proto.RegisterType((*StepConcurrent)(nil), "controller.StepConcurrent")
	proto.RegisterType((*Step)(nil), "controller.Step")
	proto.RegisterType((*JobSetTemplate)(nil), "controller.JobSetTemplate")
	proto.RegisterType((*AddJobSetTemplateReq)(nil), "controller.AddJobSetTemplateReq")
	proto.RegisterType((*AddJobSetTemplateResp)(nil), "controller.AddJobSetTemplateResp")
	proto.RegisterType((*GetJobSetTemplateReq)(nil), "controller.GetJobSetTemplateReq")
	proto.RegisterType((*GetJobSetTemplateResp)(nil), "controller.GetJobSetTemplateResp")
	proto.RegisterType((*GetAllJobSetTemplatesReq)(nil), "controller.GetAllJobSetTemplatesReq")
	proto.RegisterType((*GetAllJobSetTemplatesResp)(nil), "controller.GetAllJobSetTemplatesResp")
	proto.RegisterType((*GetJobReq)(nil), "controller.GetJobReq")
	proto.RegisterType((*GetJobResp)(nil), "controller.GetJobResp")
	proto.RegisterType((*GetAllJobsForJobSetReq)(nil), "controller.GetAllJobsForJobSetReq")
	proto.RegisterType((*GetAllJobsForJobSetResp)(nil), "controller.GetAllJobsForJobSetResp")
	proto.RegisterType((*GetAllJobsReq)(nil), "controller.GetAllJobsReq")
	proto.RegisterType((*GetAllJobsResp)(nil), "controller.GetAllJobsResp")
	proto.RegisterType((*CancelJobReq)(nil), "controller.CancelJobReq")
	proto.RegisterType((*CancelJobResp)(nil), "controller.CancelJobResp")
	proto.RegisterType((*JobSetConfig)(nil), "controller.JobSetConfig")
	proto.RegisterType((*StartJobSetReq)(nil), "controller.StartJobSetReq")
	proto.RegisterType((*StartJobSetResp)(nil), "controller.StartJobSetResp")
	proto.RegisterType((*GetJobSetReq)(nil), "controller.GetJobSetReq")
	proto.RegisterType((*JobSetStatusReport)(nil), "controller.JobSetStatusReport")
	proto.RegisterType((*GetJobSetResp)(nil), "controller.GetJobSetResp")
	proto.RegisterType((*GetAllJobSetsReq)(nil), "controller.GetAllJobSetsReq")
	proto.RegisterType((*GetAllJobSetsResp)(nil), "controller.GetAllJobSetsResp")
	proto.RegisterType((*CancelJobSetReq)(nil), "controller.CancelJobSetReq")
	proto.RegisterType((*CancelJobSetResp)(nil), "controller.CancelJobSetResp")
}

func init() { proto.RegisterFile("pkg/controller/controller.proto", fileDescriptor_d329ddaa36318286) }

var fileDescriptor_d329ddaa36318286 = []byte{
	// 1356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0x6d, 0x73, 0x13, 0xb7,
	0x13, 0xb7, 0x7d, 0x76, 0x12, 0xaf, 0x1d, 0x27, 0x08, 0x1b, 0x2e, 0x07, 0xff, 0x3f, 0x46, 0x50,
	0x4a, 0x29, 0x38, 0xc5, 0x74, 0x18, 0x3a, 0xc3, 0x0c, 0x85, 0x04, 0xf2, 0xd4, 0xf2, 0xe2, 0xd2,
	0xe9, 0x74, 0xe8, 0x9b, 0xfa, 0x41, 0x71, 0xec, 0x38, 0xbe, 0xcb, 0x49, 0x86, 0x61, 0xfa, 0x0d,
	0xfa, 0x51, 0xda, 0xe9, 0x87, 0xe8, 0x27, 0x6b, 0x47, 0x2b, 0x9d, 0xef, 0x74, 0x77, 0xb6, 0xd3,
	0x17, 0xf4, 0x4d, 0x22, 0x69, 0x7f, 0x5a, 0xfd, 0x76, 0xb5, 0xbb, 0xda, 0x33, 0xdc, 0xf2, 0xcf,
	0x06, 0xdb, 0x3d, 0x6f, 0x22, 0x02, 0x6f, 0x3c, 0x66, 0x41, 0x6c, 0xd8, 0xf2, 0x03, 0x4f, 0x78,
	0x04, 0xa2, 0x15, 0xe7, 0xba, 0x04, 0x73, 0xd1, 0x11, 0x53, 0xae, 0xff, 0x29, 0x90, 0xd3, 0x90,
	0x82, 0xce, 0x80, 0x4d, 0x84, 0xfa, 0xab, 0x96, 0x29, 0xc0, 0xda, 0xb1, 0xe8, 0x04, 0xc2, 0x65,
	0x17, 0xf4, 0x73, 0x28, 0xeb, 0x31, 0xf7, 0x89, 0x03, 0x6b, 0x5c, 0x4e, 0x86, 0x93, 0x81, 0x9d,
	0x6f, 0xe6, 0xef, 0xaf, 0xb9, 0xb3, 0x39, 0xad, 0x41, 0x75, 0x8f, 0x89, 0x63, 0x54, 0x2f, 0x37,
	0xfe, 0x91, 0x87, 0xf5, 0xd8, 0x02, 0xf7, 0xc9, 0x43, 0x28, 0x07, 0xd3, 0x89, 0x5a, 0xc0, 0xed,
	0xb5, 0x76, 0xad, 0xa5, 0xf9, 0x68, 0x58, 0x04, 0x20, 0x6d, 0xa8, 0x9e, 0xb2, 0xce, 0x58, 0x9c,
	0xea, 0x0d, 0x05, 0x73, 0xc3, 0x3e, 0xca, 0x5c, 0x03, 0x43, 0x6e, 0x42, 0xd9, 0x9b, 0x0a, 0x7f,
	0x2a, 0xbe, 0xe7, 0x03, 0xdb, 0x6a, 0xe6, 0xef, 0x97, 0xdd, 0x68, 0x41, 0xb2, 0x67, 0x41, 0xe0,
	0x05, 0x52, 0x58, 0x44, 0xe1, 0x6c, 0x4e, 0xcb, 0xb0, 0x7a, 0x2c, 0x3c, 0x5f, 0x12, 0xbf, 0x27,
	0xad, 0x97, 0xc3, 0xd0, 0x60, 0xcf, 0xf7, 0x0d, 0x83, 0xd5, 0x9c, 0xfe, 0x95, 0x87, 0xca, 0x4b,
	0xe9, 0xb5, 0x1d, 0x6f, 0x72, 0x32, 0x1c, 0x10, 0x02, 0xc5, 0x49, 0xe7, 0x9c, 0x21, 0xae, 0xec,
	0xe2, 0x98, 0x6c, 0x82, 0x35, 0x0d, 0xc6, 0xc8, 0xbd, 0xec, 0xca, 0xa1, 0x44, 0xf9, 0x5e, 0x20,
	0x90, 0xdd, 0xba, 0x8b, 0x63, 0xb9, 0x26, 0x3e, 0xfa, 0x4c, 0x93, 0xc2, 0x31, 0x79, 0x0c, 0xd6,
	0xd9, 0x7b, 0x6e, 0x97, 0x9a, 0xd6, 0xfd, 0x4a, 0xfb, 0x56, 0x2b, 0x76, 0xbf, 0xb1, 0x33, 0xd5,
	0xf8, 0xe8, 0x47, 0x57, 0x62, 0x9d, 0xc7, 0xb0, 0xaa, 0xe7, 0xf2, 0xdc, 0x33, 0xf6, 0x51, 0x53,
	0x91, 0x43, 0x52, 0x87, 0xd2, 0xfb, 0xce, 0x78, 0xca, 0x34, 0x17, 0x35, 0xa1, 0xcf, 0xa0, 0xf2,
	0xb2, 0xdf, 0xc7, 0x5d, 0x2e, 0xbb, 0x20, 0x5f, 0x80, 0xd5, 0x3b, 0x51, 0x96, 0x56, 0xda, 0xd7,
	0xe7, 0x1c, 0xea, 0x4a, 0x0c, 0xdd, 0x85, 0x6a, 0xb4, 0x93, 0xfb, 0xc4, 0x86, 0x55, 0x3e, 0xed,
	0xf5, 0x18, 0xe7, 0xda, 0x51, 0xe1, 0xd4, 0x70, 0x7b, 0x21, 0xe1, 0xf6, 0xdb, 0x50, 0xd9, 0x63,
	0x62, 0x76, 0x7e, 0x86, 0x0b, 0xa9, 0x87, 0x71, 0x75, 0x99, 0x83, 0x34, 0xfb, 0xc2, 0x72, 0xf6,
	0x06, 0x27, 0x2b, 0xc1, 0xe9, 0x0a, 0x6c, 0xc8, 0x03, 0xc7, 0x63, 0xdc, 0x85, 0xb1, 0xfc, 0x02,
	0x36, 0xcd, 0x25, 0xee, 0x93, 0x2f, 0xa1, 0xd8, 0x3b, 0x19, 0x48, 0x12, 0xd6, 0xa2, 0xe3, 0x10,
	0x44, 0x6f, 0xc9, 0x2c, 0x62, 0x3e, 0x0a, 0x32, 0xad, 0x6c, 0x02, 0x48, 0xc0, 0xa1, 0xd7, 0x3d,
	0x66, 0xd9, 0x88, 0x67, 0x50, 0x93, 0x88, 0x1d, 0x6f, 0xd2, 0x9b, 0x06, 0x81, 0xd4, 0x73, 0x0f,
	0x4a, 0x5c, 0x30, 0x3f, 0xa4, 0xb0, 0x19, 0xa7, 0x20, 0xa1, 0xae, 0x12, 0xd3, 0xdf, 0xf3, 0x50,
	0x94, 0x73, 0xf2, 0x08, 0x4a, 0x98, 0xe6, 0xfa, 0x82, 0x1b, 0xc9, 0x0d, 0x48, 0x6f, 0x3f, 0xe7,
	0x2a, 0x14, 0xf9, 0x0a, 0x56, 0x46, 0x5e, 0x97, 0x33, 0xa1, 0x5d, 0x7a, 0x2d, 0x89, 0x57, 0x6c,
	0xf7, 0x73, 0xae, 0xc6, 0x91, 0xe7, 0x20, 0xcb, 0x8e, 0xe6, 0x87, 0x8e, 0xad, 0xb4, 0x9d, 0xe4,
	0xae, 0xc8, 0x82, 0xfd, 0x9c, 0x1b, 0xc3, 0xbf, 0xb2, 0x20, 0xcf, 0xe9, 0x77, 0x50, 0x53, 0x6a,
	0x7f, 0x60, 0xe7, 0xfe, 0xb8, 0x23, 0x58, 0x66, 0x5e, 0xcd, 0x4c, 0x2f, 0x2c, 0x36, 0x7d, 0x17,
	0xea, 0x2f, 0xfb, 0x7d, 0x53, 0xa1, 0x0c, 0xb4, 0x87, 0x60, 0x8d, 0x78, 0xe8, 0x07, 0x83, 0x61,
	0x02, 0x2b, 0x61, 0xf4, 0x0c, 0x1a, 0x19, 0x5a, 0x16, 0xc6, 0xa2, 0x51, 0x89, 0x0a, 0x8b, 0x2a,
	0x51, 0x32, 0xfc, 0x1e, 0x40, 0x7d, 0x8f, 0x89, 0x34, 0xe5, 0xac, 0x98, 0xf8, 0x15, 0x1a, 0x19,
	0xd8, 0x85, 0xc4, 0xb4, 0xe5, 0x85, 0x4b, 0x59, 0xbe, 0x90, 0xa8, 0x03, 0xb6, 0x4a, 0x0a, 0x73,
	0x23, 0x26, 0xcc, 0x11, 0x6c, 0xcd, 0x91, 0x71, 0x9f, 0xb4, 0xa0, 0x38, 0xe2, 0x22, 0x0c, 0xdb,
	0x45, 0x1c, 0x10, 0x47, 0x6f, 0x43, 0x59, 0x59, 0x29, 0xdd, 0x50, 0x87, 0xd2, 0xc8, 0xeb, 0x1e,
	0xec, 0xa2, 0x5d, 0x45, 0x57, 0x4d, 0xe4, 0x63, 0x03, 0x21, 0x86, 0xfb, 0xd9, 0x20, 0x69, 0xcc,
	0x08, 0xf5, 0x1f, 0xec, 0xa2, 0xfd, 0x45, 0x77, 0x36, 0x27, 0x14, 0xaa, 0x6a, 0x2c, 0xa3, 0xe7,
	0x60, 0x17, 0x8d, 0x2d, 0xba, 0xc6, 0x1a, 0xa1, 0xaa, 0xbe, 0x14, 0xd1, 0x75, 0x9b, 0x2d, 0xf5,
	0x62, 0x1e, 0x7a, 0xdd, 0x78, 0x61, 0xb9, 0x03, 0x05, 0x2e, 0xec, 0x12, 0x42, 0xae, 0x6a, 0x48,
	0xf8, 0x04, 0xca, 0x5a, 0xef, 0x16, 0xb8, 0xa0, 0x5f, 0xc3, 0xb5, 0x99, 0x77, 0xf8, 0x1b, 0x2f,
	0x50, 0x56, 0x4b, 0xeb, 0xe2, 0x14, 0xf3, 0x26, 0x45, 0xfa, 0x1a, 0xae, 0x67, 0xee, 0xe2, 0x3e,
	0x79, 0x00, 0x45, 0x99, 0x81, 0xda, 0xa3, 0x46, 0x9e, 0x46, 0x5e, 0x71, 0x11, 0x43, 0x37, 0xf0,
	0x59, 0xd6, 0x6a, 0xe4, 0x5d, 0x3d, 0x87, 0x5a, 0x7c, 0xe1, 0x5f, 0xaa, 0xbb, 0x0b, 0xd5, 0x9d,
	0xce, 0xa4, 0xc7, 0xc6, 0x0b, 0xef, 0xa7, 0x07, 0xeb, 0x31, 0xd4, 0x27, 0xca, 0x9c, 0xa7, 0x50,
	0x55, 0x3e, 0xd1, 0x0f, 0xf2, 0x65, 0x1f, 0xc1, 0x9f, 0x64, 0x65, 0xed, 0x04, 0x22, 0xba, 0x06,
	0x1b, 0x56, 0x47, 0x5c, 0xbc, 0x8d, 0xd2, 0x2d, 0x9c, 0x92, 0x87, 0xba, 0xea, 0xab, 0xba, 0x63,
	0xa7, 0x63, 0xd7, 0x28, 0xfb, 0x7f, 0xe6, 0x61, 0xc3, 0x50, 0xbd, 0xec, 0xa1, 0x9c, 0x1b, 0x9f,
	0xe1, 0x95, 0x58, 0xcb, 0xaf, 0xc4, 0xf4, 0x60, 0x71, 0x91, 0x07, 0x4b, 0xa9, 0xda, 0x53, 0x9d,
	0xd5, 0x93, 0x65, 0xe1, 0xf8, 0x5b, 0x01, 0xc8, 0xa1, 0x4e, 0x8f, 0x28, 0xbe, 0xff, 0x83, 0x26,
	0xaf, 0x09, 0x15, 0x31, 0x3c, 0x67, 0xe8, 0x57, 0xd6, 0xc7, 0x28, 0xb0, 0xdc, 0xf8, 0x92, 0x4c,
	0x66, 0x39, 0x7d, 0x33, 0x9c, 0x0c, 0xf9, 0x29, 0xeb, 0xa3, 0x0f, 0x2c, 0xd7, 0x58, 0x23, 0xf7,
	0xa0, 0xa6, 0x7d, 0xc2, 0x38, 0xef, 0x0c, 0x18, 0xd7, 0xce, 0x48, 0xac, 0x92, 0xbb, 0xb0, 0xae,
	0xdc, 0x13, 0xc2, 0x56, 0x10, 0x66, 0x2e, 0xd2, 0x9f, 0x31, 0xa9, 0x62, 0xb7, 0xbc, 0xc0, 0x73,
	0xa4, 0x85, 0x35, 0x42, 0x55, 0xe0, 0xff, 0xa7, 0x23, 0x28, 0x55, 0x2e, 0x48, 0xd8, 0x7d, 0x28,
	0x39, 0x26, 0xed, 0xb7, 0x70, 0x25, 0xb1, 0x86, 0x2d, 0x89, 0x15, 0xd5, 0xd5, 0xad, 0x74, 0x8c,
	0x68, 0x72, 0xae, 0x44, 0xd1, 0x47, 0xb0, 0x31, 0x4b, 0xc9, 0x4b, 0x5c, 0xf7, 0x09, 0x6c, 0x9a,
	0xf0, 0x4f, 0x93, 0xc4, 0xed, 0xbf, 0xcb, 0x00, 0x3b, 0x33, 0xe2, 0xe4, 0x29, 0x94, 0xf0, 0x56,
	0x49, 0xdd, 0x7c, 0xe2, 0xd5, 0xd7, 0x89, 0xd3, 0xc8, 0x58, 0xe5, 0x3e, 0xcd, 0x91, 0x57, 0xf8,
	0x66, 0xe8, 0x88, 0xb1, 0x13, 0xae, 0x98, 0x7d, 0xa4, 0x38, 0x5b, 0x73, 0x24, 0xa8, 0xe3, 0x89,
	0x6c, 0x9b, 0x3c, 0x9f, 0x5c, 0x35, 0x0f, 0xc1, 0xaf, 0x04, 0xa7, 0x9e, 0x5e, 0xc4, 0x4d, 0x2f,
	0x60, 0x2d, 0xec, 0x8b, 0x89, 0xd9, 0x14, 0x46, 0x7d, 0xb6, 0x63, 0x67, 0x0b, 0x42, 0x05, 0x61,
	0xbf, 0x6b, 0x2a, 0x88, 0x35, 0xca, 0x8e, 0x9d, 0x2d, 0x40, 0x05, 0x47, 0xaa, 0x61, 0x0e, 0x9b,
	0x55, 0x72, 0x23, 0x89, 0x8d, 0x75, 0xb6, 0xce, 0xcd, 0xf9, 0x42, 0x54, 0xf6, 0x0e, 0xae, 0xa4,
	0x5a, 0x1f, 0xd2, 0x4c, 0xd0, 0x4f, 0x35, 0x2b, 0xce, 0xed, 0x25, 0x88, 0x50, 0x77, 0xaa, 0x7b,
	0x31, 0x75, 0x67, 0x35, 0x42, 0xa6, 0xee, 0xcc, 0xf6, 0x87, 0xe6, 0xc8, 0x09, 0x76, 0x46, 0xe9,
	0x06, 0x84, 0xdc, 0x4d, 0x1b, 0x9c, 0xee, 0x5f, 0x9c, 0xcf, 0x2e, 0x81, 0xc2, 0x73, 0xbe, 0x81,
	0x15, 0x45, 0x81, 0x34, 0xb2, 0x6a, 0xf2, 0x85, 0x33, 0xa7, 0x54, 0xd3, 0x1c, 0xf9, 0x05, 0xae,
	0x66, 0xbc, 0xe7, 0x84, 0x66, 0x1e, 0x6d, 0xb4, 0x09, 0xce, 0x9d, 0xa5, 0x18, 0x3c, 0xe1, 0x35,
	0x36, 0x45, 0x5a, 0x48, 0xb6, 0xb2, 0x37, 0x49, 0x7d, 0xce, 0x3c, 0x51, 0x98, 0x4b, 0xb3, 0xd4,
	0x37, 0x73, 0x29, 0xfe, 0xf2, 0x9b, 0xb9, 0x64, 0xbc, 0xf6, 0x34, 0x47, 0xf6, 0xa1, 0x12, 0x7b,
	0x08, 0x89, 0x93, 0xca, 0xdb, 0xc8, 0xb8, 0x1b, 0x73, 0x65, 0xb1, 0xcc, 0xd6, 0x7a, 0xec, 0x39,
	0x45, 0x2e, 0x9d, 0xd9, 0x86, 0x8e, 0xb7, 0xb1, 0x1e, 0x48, 0x56, 0x4f, 0x72, 0x73, 0xde, 0x7d,
	0xa3, 0x7b, 0xfe, 0xb7, 0x40, 0x1a, 0xa6, 0x5c, 0xbc, 0x38, 0x9a, 0x29, 0x97, 0xa8, 0xb2, 0x66,
	0xca, 0x25, 0x6b, 0x2a, 0xcd, 0xbd, 0x7a, 0xfc, 0x6e, 0x7b, 0x30, 0x14, 0xa7, 0xd3, 0x6e, 0xab,
	0xe7, 0x9d, 0x6f, 0xf3, 0x0f, 0xc3, 0x09, 0x1f, 0x7b, 0x1f, 0xb6, 0x7d, 0x16, 0x0c, 0xfb, 0x9e,
	0x78, 0xd4, 0xf3, 0x02, 0xb6, 0x6d, 0xfe, 0xfa, 0xd3, 0x5d, 0xc1, 0xdf, 0x6d, 0x9e, 0xfc, 0x13,
	0x00, 0x00, 0xff, 0xff, 0x3f, 0x33, 0x91, 0x2f, 0x16, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	// Start the Controller. Should only be called after all agents have
	// been added via AddAgent.
	Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartResp, error)
	// Get Controller overall status.
	GetStatus(ctx context.Context, in *GetStatusReq, opts ...grpc.CallOption) (*GetStatusResp, error)
	// Shut down the Controller and all agents.
	Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopResp, error)
	// AddAgent configures the controller to know about a new
	// Agent that is available for new Jobs and JobSets. It will
	// return a failure message if called after the Controller has
	// started (e.g., after Start has been called) or if an Agent
	// already exists with the given Name.
	AddAgent(ctx context.Context, in *AddAgentReq, opts ...grpc.CallOption) (*AddAgentResp, error)
	// GetAgent requests configuration information about the Agent with
	// the given name.
	GetAgent(ctx context.Context, in *GetAgentReq, opts ...grpc.CallOption) (*GetAgentResp, error)
	// GetAllAgents requests information about all registered Agents.
	GetAllAgents(ctx context.Context, in *GetAllAgentsReq, opts ...grpc.CallOption) (*GetAllAgentsResp, error)
	// AddJobSetTemplate configures the controller to know about a new
	// JobSetTemplate that is available for new JobSets. It will
	// return a failure message if an JobSetTemplate already exists with
	// the given Name.
	AddJobSetTemplate(ctx context.Context, in *AddJobSetTemplateReq, opts ...grpc.CallOption) (*AddJobSetTemplateResp, error)
	// GetJobSetTemplate requests information about the JobSetTemplate with the
	// given name and type.
	GetJobSetTemplate(ctx context.Context, in *GetJobSetTemplateReq, opts ...grpc.CallOption) (*GetJobSetTemplateResp, error)
	// GetAllJobSetTemplates requests information about all registered JobSetTemplates.
	GetAllJobSetTemplates(ctx context.Context, in *GetAllJobSetTemplatesReq, opts ...grpc.CallOption) (*GetAllJobSetTemplatesResp, error)
	// GetJob requests information on the specified Job.
	GetJob(ctx context.Context, in *GetJobReq, opts ...grpc.CallOption) (*GetJobResp, error)
	// GetAllJobsForJobSet requests information on all known Jobs for the given
	// JobSet.
	GetAllJobsForJobSet(ctx context.Context, in *GetAllJobsForJobSetReq, opts ...grpc.CallOption) (*GetAllJobsForJobSetResp, error)
	// GetAllJobs requests information on all known Jobs.
	GetAllJobs(ctx context.Context, in *GetAllJobsReq, opts ...grpc.CallOption) (*GetAllJobsResp, error)
	// CancelJob requests that the Controller cancel the specified Job.
	CancelJob(ctx context.Context, in *CancelJobReq, opts ...grpc.CallOption) (*CancelJobResp, error)
	// StartJobSet requests that the Controller begin a new JobSet, with the
	// specified configuration.
	StartJobSet(ctx context.Context, in *StartJobSetReq, opts ...grpc.CallOption) (*StartJobSetResp, error)
	// GetJobSet requests information on the specified JobSet.
	GetJobSet(ctx context.Context, in *GetJobSetReq, opts ...grpc.CallOption) (*GetJobSetResp, error)
	// GetAllJobSets requests information on all known JobSets.
	GetAllJobSets(ctx context.Context, in *GetAllJobSetsReq, opts ...grpc.CallOption) (*GetAllJobSetsResp, error)
	// CancelJobSet requests that the Controller cancel the specified JobSet.
	CancelJobSet(ctx context.Context, in *CancelJobSetReq, opts ...grpc.CallOption) (*CancelJobSetResp, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartResp, error) {
	out := new(StartResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetStatus(ctx context.Context, in *GetStatusReq, opts ...grpc.CallOption) (*GetStatusResp, error) {
	out := new(GetStatusResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopResp, error) {
	out := new(StopResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) AddAgent(ctx context.Context, in *AddAgentReq, opts ...grpc.CallOption) (*AddAgentResp, error) {
	out := new(AddAgentResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/AddAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAgent(ctx context.Context, in *GetAgentReq, opts ...grpc.CallOption) (*GetAgentResp, error) {
	out := new(GetAgentResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAllAgents(ctx context.Context, in *GetAllAgentsReq, opts ...grpc.CallOption) (*GetAllAgentsResp, error) {
	out := new(GetAllAgentsResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAllAgents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) AddJobSetTemplate(ctx context.Context, in *AddJobSetTemplateReq, opts ...grpc.CallOption) (*AddJobSetTemplateResp, error) {
	out := new(AddJobSetTemplateResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/AddJobSetTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetJobSetTemplate(ctx context.Context, in *GetJobSetTemplateReq, opts ...grpc.CallOption) (*GetJobSetTemplateResp, error) {
	out := new(GetJobSetTemplateResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetJobSetTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAllJobSetTemplates(ctx context.Context, in *GetAllJobSetTemplatesReq, opts ...grpc.CallOption) (*GetAllJobSetTemplatesResp, error) {
	out := new(GetAllJobSetTemplatesResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAllJobSetTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetJob(ctx context.Context, in *GetJobReq, opts ...grpc.CallOption) (*GetJobResp, error) {
	out := new(GetJobResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAllJobsForJobSet(ctx context.Context, in *GetAllJobsForJobSetReq, opts ...grpc.CallOption) (*GetAllJobsForJobSetResp, error) {
	out := new(GetAllJobsForJobSetResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAllJobsForJobSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAllJobs(ctx context.Context, in *GetAllJobsReq, opts ...grpc.CallOption) (*GetAllJobsResp, error) {
	out := new(GetAllJobsResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAllJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CancelJob(ctx context.Context, in *CancelJobReq, opts ...grpc.CallOption) (*CancelJobResp, error) {
	out := new(CancelJobResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/CancelJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) StartJobSet(ctx context.Context, in *StartJobSetReq, opts ...grpc.CallOption) (*StartJobSetResp, error) {
	out := new(StartJobSetResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/StartJobSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetJobSet(ctx context.Context, in *GetJobSetReq, opts ...grpc.CallOption) (*GetJobSetResp, error) {
	out := new(GetJobSetResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetJobSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) GetAllJobSets(ctx context.Context, in *GetAllJobSetsReq, opts ...grpc.CallOption) (*GetAllJobSetsResp, error) {
	out := new(GetAllJobSetsResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/GetAllJobSets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerClient) CancelJobSet(ctx context.Context, in *CancelJobSetReq, opts ...grpc.CallOption) (*CancelJobSetResp, error) {
	out := new(CancelJobSetResp)
	err := c.cc.Invoke(ctx, "/controller.Controller/CancelJobSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServer is the server API for Controller service.
type ControllerServer interface {
	// Start the Controller. Should only be called after all agents have
	// been added via AddAgent.
	Start(context.Context, *StartReq) (*StartResp, error)
	// Get Controller overall status.
	GetStatus(context.Context, *GetStatusReq) (*GetStatusResp, error)
	// Shut down the Controller and all agents.
	Stop(context.Context, *StopReq) (*StopResp, error)
	// AddAgent configures the controller to know about a new
	// Agent that is available for new Jobs and JobSets. It will
	// return a failure message if called after the Controller has
	// started (e.g., after Start has been called) or if an Agent
	// already exists with the given Name.
	AddAgent(context.Context, *AddAgentReq) (*AddAgentResp, error)
	// GetAgent requests configuration information about the Agent with
	// the given name.
	GetAgent(context.Context, *GetAgentReq) (*GetAgentResp, error)
	// GetAllAgents requests information about all registered Agents.
	GetAllAgents(context.Context, *GetAllAgentsReq) (*GetAllAgentsResp, error)
	// AddJobSetTemplate configures the controller to know about a new
	// JobSetTemplate that is available for new JobSets. It will
	// return a failure message if an JobSetTemplate already exists with
	// the given Name.
	AddJobSetTemplate(context.Context, *AddJobSetTemplateReq) (*AddJobSetTemplateResp, error)
	// GetJobSetTemplate requests information about the JobSetTemplate with the
	// given name and type.
	GetJobSetTemplate(context.Context, *GetJobSetTemplateReq) (*GetJobSetTemplateResp, error)
	// GetAllJobSetTemplates requests information about all registered JobSetTemplates.
	GetAllJobSetTemplates(context.Context, *GetAllJobSetTemplatesReq) (*GetAllJobSetTemplatesResp, error)
	// GetJob requests information on the specified Job.
	GetJob(context.Context, *GetJobReq) (*GetJobResp, error)
	// GetAllJobsForJobSet requests information on all known Jobs for the given
	// JobSet.
	GetAllJobsForJobSet(context.Context, *GetAllJobsForJobSetReq) (*GetAllJobsForJobSetResp, error)
	// GetAllJobs requests information on all known Jobs.
	GetAllJobs(context.Context, *GetAllJobsReq) (*GetAllJobsResp, error)
	// CancelJob requests that the Controller cancel the specified Job.
	CancelJob(context.Context, *CancelJobReq) (*CancelJobResp, error)
	// StartJobSet requests that the Controller begin a new JobSet, with the
	// specified configuration.
	StartJobSet(context.Context, *StartJobSetReq) (*StartJobSetResp, error)
	// GetJobSet requests information on the specified JobSet.
	GetJobSet(context.Context, *GetJobSetReq) (*GetJobSetResp, error)
	// GetAllJobSets requests information on all known JobSets.
	GetAllJobSets(context.Context, *GetAllJobSetsReq) (*GetAllJobSetsResp, error)
	// CancelJobSet requests that the Controller cancel the specified JobSet.
	CancelJobSet(context.Context, *CancelJobSetReq) (*CancelJobSetResp, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).Start(ctx, req.(*StartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetStatus(ctx, req.(*GetStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).Stop(ctx, req.(*StopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_AddAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAgentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).AddAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/AddAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).AddAgent(ctx, req.(*AddAgentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAgentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAgent(ctx, req.(*GetAgentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAllAgents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllAgentsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAllAgents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAllAgents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAllAgents(ctx, req.(*GetAllAgentsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_AddJobSetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddJobSetTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).AddJobSetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/AddJobSetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).AddJobSetTemplate(ctx, req.(*AddJobSetTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetJobSetTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobSetTemplateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetJobSetTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetJobSetTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetJobSetTemplate(ctx, req.(*GetJobSetTemplateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAllJobSetTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllJobSetTemplatesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAllJobSetTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAllJobSetTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAllJobSetTemplates(ctx, req.(*GetAllJobSetTemplatesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetJob(ctx, req.(*GetJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAllJobsForJobSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllJobsForJobSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAllJobsForJobSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAllJobsForJobSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAllJobsForJobSet(ctx, req.(*GetAllJobsForJobSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAllJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllJobsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAllJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAllJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAllJobs(ctx, req.(*GetAllJobsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CancelJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelJobReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CancelJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CancelJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CancelJob(ctx, req.(*CancelJobReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_StartJobSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartJobSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).StartJobSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/StartJobSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).StartJobSet(ctx, req.(*StartJobSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetJobSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetJobSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetJobSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetJobSet(ctx, req.(*GetJobSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_GetAllJobSets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllJobSetsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).GetAllJobSets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/GetAllJobSets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).GetAllJobSets(ctx, req.(*GetAllJobSetsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Controller_CancelJobSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelJobSetReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).CancelJobSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.Controller/CancelJobSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).CancelJobSet(ctx, req.(*CancelJobSetReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Controller_Start_Handler,
		},
		{
			MethodName: "GetStatus",
			Handler:    _Controller_GetStatus_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Controller_Stop_Handler,
		},
		{
			MethodName: "AddAgent",
			Handler:    _Controller_AddAgent_Handler,
		},
		{
			MethodName: "GetAgent",
			Handler:    _Controller_GetAgent_Handler,
		},
		{
			MethodName: "GetAllAgents",
			Handler:    _Controller_GetAllAgents_Handler,
		},
		{
			MethodName: "AddJobSetTemplate",
			Handler:    _Controller_AddJobSetTemplate_Handler,
		},
		{
			MethodName: "GetJobSetTemplate",
			Handler:    _Controller_GetJobSetTemplate_Handler,
		},
		{
			MethodName: "GetAllJobSetTemplates",
			Handler:    _Controller_GetAllJobSetTemplates_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _Controller_GetJob_Handler,
		},
		{
			MethodName: "GetAllJobsForJobSet",
			Handler:    _Controller_GetAllJobsForJobSet_Handler,
		},
		{
			MethodName: "GetAllJobs",
			Handler:    _Controller_GetAllJobs_Handler,
		},
		{
			MethodName: "CancelJob",
			Handler:    _Controller_CancelJob_Handler,
		},
		{
			MethodName: "StartJobSet",
			Handler:    _Controller_StartJobSet_Handler,
		},
		{
			MethodName: "GetJobSet",
			Handler:    _Controller_GetJobSet_Handler,
		},
		{
			MethodName: "GetAllJobSets",
			Handler:    _Controller_GetAllJobSets_Handler,
		},
		{
			MethodName: "CancelJobSet",
			Handler:    _Controller_CancelJobSet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/controller/controller.proto",
}
